import{_ as o,o as e,c as s,k as t}from"./chunks/framework.ekaVIUcx.js";const J=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Author.md","filePath":"Author.md"}'),n={name:"Author.md"},l=t("blockquote",null,[t("p",null,"天下皆白，唯我独黑。非攻墨门，兼爱平生。")],-1),_=t("p",null,"致你，陌生人：",-1),c=t("p",null,"在前端开发的过程中，组件库可以很方便地帮助我们设计前端页面，比如Element-ui、Vant、Bootstrap......这些都是十分稳定、也十分高效的前端组件库。",-1),a=t("p",null,"只是相比于哪些简单的组件，大家对美观的组件的需求总是永无止尽，而这些美观的组件往往又很难通过制定一些规范来作为模板被大家灵活的调用。就好像艺术一样，可以被规范的艺术又怎会成为艺术呢？",-1),r=t("p",null,"所以在前端开发的过程中，我们面对一些比较复杂、抽象的美观组件的实现的时候，最终还要需要动手编写HTML、CSS、JS/TS代码。这个过程对不同的人而言可能有着不同的看法，有人享受这种自定义的过程，有人则厌烦这种花里胡哨的样式，有人可以很轻松地设计出别出心裁的组件，有人则要查阅各种资料，最后绞尽脑汁也写不出来......",-1),p=t("p",null,"在我看来，无论设计出的组件多么精美，它们仍是会消耗我们许多精力，对于那些没有熟练掌握CSS、JS/TS的初学者而言更是如此。",-1),d=t("p",null,"所以我设计了这个网站，用来存放一些我本人实现的前端自定义组件的设计思路和关键代码，一方面可以在以后面对相关需求的时候节省时间提高效率，一方面整理我在前端学习过程中的思路和理解。",-1),i=t("p",null,"感谢你读完这封借Web带给你的信。如果这个网站曾对你有所帮助，那是我的荣幸。",-1),u=t("p",null,"——Moper",-1),h=[l,_,c,a,r,p,d,i,u];function m(S,f,k,A,B,$){return e(),s("div",null,h)}const T=o(n,[["render",m]]);export{J as __pageData,T as default};
